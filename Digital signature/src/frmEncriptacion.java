
import java.util.*;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.interfaces.ECPublicKey;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author Alex Ibarra
 */
public class frmEncriptacion extends javax.swing.JFrame {

    File fichero;
    int tamCabecera = 54; //Tamaño cabecera bmp es 54 bytes
    byte[] data = null;
    byte[] cabecera = new byte[tamCabecera];
    byte[] datos = null;
    byte[] resultado = null;
    byte[] llave = null;
    String nombre;
    String publicKey = "", privateKey = "";
    PublicKey llavePublica = null;
    PrivateKey llavePrivada = null;
    
    /**
     * Creates new form frmEncriptacion
     */
    public frmEncriptacion() {
        initComponents();
        setLocationRelativeTo(null);
        cboOperacion.setSelectedIndex(0);

        txtLlavePublica.setText("");
        txtLlavePublica.setVisible(false);
        lblPublica.setVisible(false);
        btnBuscarPublica.setVisible(false);

        txtLlavePrivada.setText("");
        txtLlavePrivada.setVisible(true);
        lblPrivada.setVisible(true);
        btnBuscarPrivada.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRutaEntrada = new javax.swing.JTextField();
        cboOperacion = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblPublica = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnEjecutar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtLlavePublica = new javax.swing.JTextField();
        btnBuscarPublica = new javax.swing.JButton();
        lblPrivada = new javax.swing.JLabel();
        txtLlavePrivada = new javax.swing.JTextField();
        btnBuscarPrivada = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRutaEntrada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtRutaEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 650, 40));

        cboOperacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboOperacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Firmar", "Verificar" }));
        cboOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboOperacionActionPerformed(evt);
            }
        });
        getContentPane().add(cboOperacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 250, 50));

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 160, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Firma digital");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, 40));

        lblPublica.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPublica.setText("Selecciona la llave publica para verificar:");
        getContentPane().add(lblPublica, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ingrese la ruta del archivo:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        btnSalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, 160, 40));

        btnEjecutar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEjecutar.setText("Ejecutar");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, 160, 40));

        btnLimpiar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, 160, 40));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 440, 40, 60));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Selecciona la operación a realizar:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, -1, -1));

        txtLlavePublica.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtLlavePublica, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 420, 40));

        btnBuscarPublica.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscarPublica.setText("Buscar");
        btnBuscarPublica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPublicaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarPublica, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 160, 40));

        lblPrivada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPrivada.setText("Selecciona la llave privada para firmar:");
        getContentPane().add(lblPrivada, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, 20));

        txtLlavePrivada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtLlavePrivada, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 420, 40));

        btnBuscarPrivada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscarPrivada.setText("Buscar");
        btnBuscarPrivada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPrivadaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarPrivada, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 160, 40));

        btnGenerar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGenerar.setText("Generar llaves");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 350, 160, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("C:\\Users\\alexi\\Desktop"));
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            fichero = fileChooser.getSelectedFile();
            txtRutaEntrada.setText(fichero.getPath());
            nombre = fichero.getAbsolutePath().replace(".txt", "");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed
        //Ejecucion de cifrado o descifrado
        try {
            BufferedReader bf = new BufferedReader(new FileReader(fichero));
            String texto = "", linea;
            int caracter;
            caracter = bf.read();
            while (caracter != -1) {
                texto = texto + (char) caracter;
                caracter = bf.read();
            }
            bf.close();

            //Se obtienen los bits de la llave
            llave = txtLlavePublica.getText().getBytes();
            //Se verifica la opción del usuario
            BufferedWriter bw;
            if (cboOperacion.getSelectedIndex() == 0) {
                //Firmar
                MessageDigest hash = MessageDigest.getInstance("SHA-256");
                byte[] digesto = hash.digest(texto.getBytes());
                
                String firma = cifrarRSA(new String(digesto));
                
                bw = new BufferedWriter(new FileWriter(nombre + "_firmado.txt"));
                bw.write(firma + texto);
                bw.close();
                JOptionPane.showMessageDialog(this, "Documento firmado exitosamente", "Éxito", 1);
            } else {
                //Verificar
                String firma = new String(texto.substring(0, 172));
                texto = texto.substring(172);
                MessageDigest hash = MessageDigest.getInstance("SHA-256");
                
                byte[] digesto = hash.digest(texto.getBytes());
                String digestoDescifrado = descifrarRSA(firma);
                
                if (new String(digesto).equals(digestoDescifrado)) {
                    bw = new BufferedWriter(new FileWriter(nombre + "_verificado.txt"));
                    bw.write(texto);
                    bw.close();
                    JOptionPane.showMessageDialog(this, "Efectivamente, el documento lo envío el destinatario correcto", "Éxito", 1);
                } else {
                    JOptionPane.showMessageDialog(this, "La firma es incorrecta, no confiar en el mensaje recibido", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEjecutarActionPerformed

    private String cifrarRSA(String texto) {
        String resultado = "";
        try {
            byte[] textoCifrado;
            Cipher cipher = Cipher.getInstance("RSA/ECB/NoPadding");
            cipher.init(Cipher.ENCRYPT_MODE, llavePrivada);
            textoCifrado = cipher.doFinal(texto.getBytes());
            resultado = Base64.getEncoder().encodeToString(textoCifrado);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return resultado;
    }

    private String descifrarRSA(String texto) {
        byte[] textoDescifrado = null;
        try {
            Cipher cipher = Cipher.getInstance("RSA/ECB/NoPadding");
            cipher.init(Cipher.DECRYPT_MODE, llavePublica);
            textoDescifrado = cipher.doFinal(Base64.getDecoder().decode(texto));
            textoDescifrado = trim(textoDescifrado);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", 1);
        }
        return new String(textoDescifrado);
    }

    private static byte[] trim (byte[] bytes) {
        int i = 0;
        while (i <= (bytes.length - 1) && bytes[i] == 0) {
            i++;
        }
        return Arrays.copyOfRange(bytes, i, bytes.length);
    }

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        cboOperacion.setSelectedIndex(0);
        txtRutaEntrada.setText("");
        txtLlavePublica.setText("");
        lblPublica.setVisible(false);
        btnBuscarPublica.setVisible(false);
        txtLlavePublica.setVisible(false);

        txtLlavePrivada.setText("");
        lblPrivada.setVisible(true);
        btnBuscarPrivada.setVisible(true);
        txtLlavePrivada.setVisible(true);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cboOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboOperacionActionPerformed
        // TODO add your handling code here:
        if (cboOperacion.getSelectedIndex() == 1) {
            txtLlavePublica.setText("");
            txtLlavePublica.setVisible(true);
            lblPublica.setVisible(true);
            btnBuscarPublica.setVisible(true);

            txtLlavePrivada.setText("");
            txtLlavePrivada.setVisible(false);
            lblPrivada.setVisible(false);
            btnBuscarPrivada.setVisible(false);
        } else {
            txtLlavePublica.setText("");
            txtLlavePublica.setVisible(false);
            lblPublica.setVisible(false);
            btnBuscarPublica.setVisible(false);

            txtLlavePrivada.setText("");
            txtLlavePrivada.setVisible(true);
            lblPrivada.setVisible(true);
            btnBuscarPrivada.setVisible(true);
        }
    }//GEN-LAST:event_cboOperacionActionPerformed

    private void btnBuscarPublicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPublicaActionPerformed
        File archivo;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("."));
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            archivo = fileChooser.getSelectedFile();
            txtLlavePublica.setText(archivo.getPath());
            try {
                BufferedReader bf = new BufferedReader(new FileReader(archivo));
                String texto = "";
                int caracter;
                caracter = bf.read();
                while (caracter != -1) {
                    texto = texto + (char) caracter;
                    caracter = bf.read();
                }
                bf.close();

                publicKey = texto;

                KeyFactory factory = KeyFactory.getInstance("RSA");
                llavePublica = (PublicKey) factory.generatePublic(new X509EncodedKeySpec(Base64.getDecoder().decode(publicKey)));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnBuscarPublicaActionPerformed

    private void btnBuscarPrivadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPrivadaActionPerformed
        File archivo;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("."));
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            archivo = fileChooser.getSelectedFile();
            txtLlavePrivada.setText(archivo.getPath());
            try {
                BufferedReader bf = new BufferedReader(new FileReader(archivo));
                String texto = "";
                int caracter;
                caracter = bf.read();
                while (caracter != -1) {
                    texto = texto + (char) caracter;
                    caracter = bf.read();
                }
                bf.close();
                privateKey = texto;

                KeyFactory factory = KeyFactory.getInstance("RSA");
                llavePrivada = (PrivateKey) factory.generatePrivate(new PKCS8EncodedKeySpec(Base64.getDecoder().decode(privateKey)));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnBuscarPrivadaActionPerformed


    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:
        try {
            KeyPairGenerator kpg = KeyPairGenerator.getInstance("RSA");
            kpg.initialize(1024);
            KeyPair kp;
            kp = kpg.genKeyPair();

            llavePublica = kp.getPublic();
            llavePrivada = kp.getPrivate();

            publicKey = Base64.getEncoder().encodeToString(llavePublica.getEncoded());
            privateKey = Base64.getEncoder().encodeToString(llavePrivada.getEncoded());
            System.out.println(publicKey);
            System.out.println("");
            System.out.println(privateKey);
            BufferedWriter bw = new BufferedWriter(new FileWriter("publicKey.txt"));
            bw.write(publicKey);
            bw.close();
            bw = new BufferedWriter(new FileWriter("privateKey.txt"));
            bw.write(privateKey);
            bw.close();

            /*Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("publicKey.txt"), "UTF-8"));
             X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(llavePublica.getEncoded());
             publicKey = bytesToString(x509EncodedKeySpec.getEncoded());
             out.write(publicKey);
             out.close();

             out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("privateKey.txt"), "UTF-8"));
             x509EncodedKeySpec = new X509EncodedKeySpec(llavePrivada.getEncoded());
             privateKey = bytesToString(x509EncodedKeySpec.getEncoded());
             out.write(privateKey);
             out.close();*/
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    /*public String bytesToString(byte[] b) {
     byte[] b2 = new byte[b.length + 1];
     b2[0] = 1;
     System.arraycopy(b, 0, b2, 1, b.length);
     return new BigInteger(b2).toString(36);
     }
    
     public byte[] stringToBytes(String s) {
     byte[] b2 = new BigInteger(s, 36).toByteArray();
     return Arrays.copyOfRange(b2, 1, b2.length);
     }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEncriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEncriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEncriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEncriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEncriptacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarPrivada;
    private javax.swing.JButton btnBuscarPublica;
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cboOperacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblPrivada;
    private javax.swing.JLabel lblPublica;
    private javax.swing.JTextField txtLlavePrivada;
    private javax.swing.JTextField txtLlavePublica;
    private javax.swing.JTextField txtRutaEntrada;
    // End of variables declaration//GEN-END:variables
}
